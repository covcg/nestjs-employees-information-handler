scalar DateTime
type Employee {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
  hash: String!
  firstName: String
  lastName: String
  emergencyContact: String
  emergencyNumber: String
  bloodType: String
  role: String!
  permissions: [Permission!]!
}

type Permission {
  id: ID!
  name: String!
  description: String
}

type Query {
  employees: [Employee!]!
  employee(id: ID!): Employee
}


input NewEmployee {
  email: String!
  hash: String!
  firstName: String
  lastName: String
  emergencyContact: String
  emergencyNumber: String
  bloodType: String
  role: String!
}

input UpdateEmployee {
  firstName: String
  lastName: String
  emergencyContact: String
  emergencyNumber: String
  bloodType: String
}

input ChangeEmployeePassword {
  email: String!
  hash: String!
}

type Mutation {
  createEmployee(input: NewEmployee!): Employee!
  updateEmployee(input: UpdateEmployee!): Employee
  changeEmployeePassword(input: ChangeEmployeePassword): Employee
  deleteEmployee(id: ID!): Employee
}